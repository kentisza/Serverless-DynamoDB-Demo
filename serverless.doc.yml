documentation:
  version: '1.0'
  title: 'Serverless-DynamoDB-Demo'
  description: 'Uses the Serverless Framework to create a (Lambda & API Gateway based) serverless API to record S3 objects in DynamoDB'
  models:
    - name: "ErrorResponse"
      description: "This is an error"
      contentType: "application/json"
      schema:
        type: "object"
        properties:
          error:
            type: "string"
    - name: "PSUCreateResponse"
      description: "Model for an S3 pre-signed URL"
      contentType: "application/json"
      schema:
        type: "object"
        properties:
          url:
            type: "string"
    - name: "GetRecordList"
      description: "Model for a list of the S3 objects and their attributes"
      contentType: "application/json"
      schema:
        type: "object"
        properties:
          sortorder:
            type: "string"
          pagination:
            type: "string"
          startkey:
            type: "object"
            properties:
              bucketname:
                type: "string"
              uploadtimedate:
                type: "string"
#    - name: "startkey"
#      description: "To continue the response from a previous query, use the values returned"
#      contentType: "application/json"
#      schema:
#        type: "object"
#        properties:
#          bucketname:
#            type: "string"
#          uploadtimedate:
#            type: "string"
    - name: "GetRecordListResponse"
      description: "Model for a list of the S3 objects and their attributes"
      contentType: "application/json"
      schema:
        type: "object"
        properties:
          Items: 
            type: "object"
            properties:
              bucketname:
                type: "string"
              objectname:
                type: "string"
              filesize: 
                type: "string" 
              mimetype: 
                type: "string"
              uploadtimedate:
                type: "string"
          Count: 
            type: "number"
          ScannedCount: 
            type: "number"
          LastEvaluatedKey: 
            type: "object"
            properties:
              bucketname:
                type: "string"
              uploadtimedate:
                type: "string"
    - name: "GetRecord"
      description: "Model for a list of the S3 objects and their attributes"
      contentType: "application/json"
      schema:
        type: "object"
        properties:
          name:
            type: "string"
    - name: "GetRecordResponse"
      description: "Model for a list of the S3 objects and their attributes"
      contentType: "application/json"
      schema:
        type: "object"
        properties:
          Items: 
            type: "object"
            properties:
              bucketname:
                type: "string"
              objectname:
                type: "string"
              filesize: 
                type: "string" 
              mimetype: 
                type: "string"
              uploadtimedate:
                type: "string"
          Count: 
            type: "number"
          ScannedCount: 
            type: "number"

endpoints:
  genpsu:
    summary: "Generate Pre-Signed URL"
    description: "Creates an S3 pre-signed URL"
    requestBody:
      description: "An object name to be used for upload to S3"
    requestModels:
      application/json: "PSURequest"
    methodResponses:
      - statusCode: 201
        responseBody:
          description: "A pre-signed URL"
        responseModels:
          application/json: "PSUCreateResponse"
      - statusCode: 500
        responseBody:
          description: "An error message when creating a pre-signed URL"
        responseModels:
          application/json: "ErrorResponse"
  getrecordlist:
    summary: "Retrieve a List of S3 Objects from DynamoDB"
    description: "Generates a list of S3 objects and their attributes sorted by upload time"
    requestBody:
      description: "The sortorder and pagination of the results"
    requestModels:
      application/json: "GetRecordListRequest"
    methodResponses:
      - statusCode: 201
        responseBody:
          description: "A list of S3 objects and attributes"
        responseModels:
          application/json: "GetRecordListResponse"
      - statusCode: 500
        responseBody:
          description: "An error occurred when fetching the list of objects"
        responseModels:
          application/json: "ErrorResponse"
  getrecord:
    summary: "Retrieve an S3 Object from DynamoDB"
    description: "Generates an S3 objects and its attributes"
    requestBody:
      description: "The sortorder and pagination of the results"
    requestModels:
      application/json: "GetRecordRequest"
    methodResponses:
      - statusCode: 201
        responseBody:
          description: "An S3 object and attributes"
        responseModels:
          application/json: "GetRecordResponse"
      - statusCode: 500
        responseBody:
          description: "An error occurred when fetching the object"
        responseModels:
          application/json: "ErrorResponse"         
  